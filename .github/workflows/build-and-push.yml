name: Build and Push Images

on:
  push:
    branches: [main, master]
    tags: ['v*']
  pull_request:
    branches: [main, master]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service: [frontend, backend]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get build info
        id: build-info
        run: |
          echo "BUILD_VERSION=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          echo "BUILD_NUMBER=${{ github.run_number }}" >> $GITHUB_OUTPUT
          echo "GIT_COMMIT=${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_VERSION=${{ steps.build-info.outputs.BUILD_VERSION }}
            BUILD_NUMBER=${{ steps.build-info.outputs.BUILD_NUMBER }}
            GIT_COMMIT=${{ steps.build-info.outputs.GIT_COMMIT }}
            ENVIRONMENT=production
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Deploy notification
        run: |
          echo "ðŸš€ Images built and pushed successfully!"
          echo "Frontend: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:latest"
          echo "Backend: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:latest"
          echo ""
          echo "To deploy to production, update your environment variables:"
          echo "GITHUB_REPOSITORY=${{ github.repository }}"
          echo "IMAGE_TAG=latest"
          echo ""
          echo "Then run: docker-compose -f docker-compose.prod.yml up -d"