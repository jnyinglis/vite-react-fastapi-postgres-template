name: Tests

on:
  push:
    branches-ignore: [main]
  pull_request:
    branches: [main, develop]

jobs:
  # Quick Tests Job
  test:
    name: Quick Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.pnpm-store
          key: ${{ runner.os }}-deps-${{ hashFiles('backend/requirements.txt', 'frontend/pnpm-lock.yaml') }}

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Run backend type checking
        working-directory: ./backend
        run: mypy app --ignore-missing-imports

      - name: Run frontend type checking
        working-directory: ./frontend
        run: pnpm type-check

      - name: Run backend tests
        working-directory: ./backend
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/test_db
          DATABASE_URL_SYNC: postgresql://postgres:postgres@localhost:5432/test_db
          SECRET_KEY: test-secret-key
          ENVIRONMENT: testing
          DEBUG: true
        run: python -m pytest

      - name: Run frontend linting
        working-directory: ./frontend
        run: pnpm lint

      - name: Build frontend
        working-directory: ./frontend
        run: pnpm build

      - name: Generate TypeScript types
        working-directory: ./backend
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/test_db
          SECRET_KEY: test-secret-key
          ENVIRONMENT: testing
        run: python generate_types.py

      - name: Check for uncommitted changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "❌ Generated types are out of sync. Please run 'make generate-types' and commit the changes."
            git diff
            exit 1
          else
            echo "✅ Generated types are up to date"
          fi